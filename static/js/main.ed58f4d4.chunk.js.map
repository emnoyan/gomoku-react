{"version":3,"sources":["component/Square.js","component/Board.js","component/Control.js","util.js","component/WinnerModal.js","component/Stats.js","App.js","serviceWorker.js","index.js"],"names":["Square","onClick","disabled","mark","className","Board","current","onChange","winner","board","map","x","i","key","sx","j","e","OPTION","size","criteria","Control","turn","onReset","onUndo","useState","option","setOption","style","paddingTop","type","value","parseInt","target","n","p","push","Array","fill","checker","step","current_x","current_y","count","range","c","undefined","WinnerModal","winnerModal","useRef","ref","display","maxWidth","Stats","data","length","o","App","setCurrent","history","setHistory","setWinner","stats","setStats","useEffect","newCurrent","handleReset","newOption","prev","JSON","parse","stringify","won","pop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ed58f4d4.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Square({onClick, disabled, mark}) {\n  return (\n    <button className=\"btn btn-board\" onClick={onClick} disabled={disabled}>\n      <span className={mark === false? \"x\" : mark === true? \"o\" : \"\"}></span>\n    </button>\n  )\n}\n\nexport default Square","import React from 'react'\nimport Square from './Square'\n\nfunction Board({current, onChange, winner}) {\n  return (\n    <div className=\"w3-justify\">\n      <div className=\"board-container\">\n        <div className=\"board\">\n          {\n            current.board.map((x,i) => (\n              <div \n                key={i} \n                className=\"board-row\"\n              >\n                {\n                  x.map((sx,j) => (\n                    <Square\n                      key={j}\n                      mark={sx}\n                      onClick={(e) => onChange(i, j)}\n                      disabled={winner!=null? true: false}\n                    />\n                  ))\n                }\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Board","import React, { useState } from 'react'\n\nconst OPTION = {\n  size: 19,\n  criteria: 5\n}\n\nfunction Control({turn, onReset, onUndo}) {\n  const [option, setOption] = useState(OPTION)\n\n  const handleOnchangeCriteria = (e) => {\n    const criteria = parseInt(e.target.value)\n    setOption({criteria: criteria, size: option.size})\n  }\n\n  const handleOnchangeSize = (e) => {\n    const size = parseInt(e.target.value)\n    setOption({criteria: option.criteria, size: size})\n  }\n\n  const handleReset = () => {\n    onReset(option)\n  }\n\n  const handleUndo = () => {\n    onUndo()\n  }\n\n  return (\n    <div className=\"w3-card-0\" style={{paddingTop: '3px'}}>\n      <header className=\"w3-container w3-light-grey\">\n        <h3>プレーヤーターン: <b>{turn? \"O\" : \"X\"}</b></h3>\n      </header>\n\n      <div className=\"w3-row-padding w3-section\">\n        <div className=\"w3-half\">\n          <label>サイズ</label>\n          <input \n            className=\"w3-input w3-border\" \n            type=\"number\" \n            value={option.size}\n            onChange={handleOnchangeSize}\n          />\n        </div>\n        <div className=\"w3-half\">\n          <label>勝ち条件</label>\n          <input \n            className=\"w3-input w3-border\" \n            type=\"number\" \n            value={option.criteria}\n            onChange={handleOnchangeCriteria}\n          />\n        </div>\n      </div>\n\n      <hr/>\n\n      <button \n        className=\"w3-button w3-block w3-dark-grey\"\n        onClick={handleReset}\n      >\n        リセット\n      </button>\n      <br/>\n      <button \n        className=\"w3-button w3-block w3-dark-grey\"\n        onClick={handleUndo}\n      >\n        先に戻す\n      </button>\n    </div>\n  )\n}\n\nexport default Control\nexport { OPTION }","function board(n) {\n  let p = []\n  for (let j = 0; j < n; j++) {\n    p.push(Array(n).fill(null))\n  }\n  return p\n}\n\nfunction checker(board, criteria, [current_x, current_y], step) {\n  let current = board[current_x][current_y], count = 0, range = []\n  \n  for (let c = - criteria + 1; c < criteria; c++) range.push(c)\n\n  for (const m of range) {\n    const [i, j] = step(m)\n    \n    if (board[i] !== undefined)\n      if (board[i][j] !== undefined) {\n        if (board[i][j] !== current) count=0\n        else count++\n        if (count === criteria) return true\n      }\n  }\n\n  return false\n}\n\nfunction won(board, criteria, [i, j]) {\n  let r = checker(board, criteria, [i, j], (step) => [i + step, j + step]) || checker(board, criteria, [i, j], (step) => [i , j - step]) || checker(board, criteria, [i, j], (step) => [i + step, j - step]) || checker(board, criteria, [i, j], (step) => [i + step, j])\n  return r\n}\n\nexport { board, won }\n","import React, { useRef } from 'react'\n\nfunction WinnerModal({onReset, winner}) {\n  const winnerModal = useRef()\n\n  const handleClose = () => {\n    winnerModal.current.style = \"none\"\n  }\n\n  return (\n    <div ref={winnerModal} className=\"w3-modal\" style={{display:  winner!=null? \"block\": \"none\"}}>\n      <div className=\"w3-modal-content w3-card-4\" style={{maxWidth: '400px'}}>\n        <div className=\"w3-container\">\n          <span onClick={handleClose} className=\"w3-button w3-display-topright\">&times;</span>\n          <h3><b>{winner? \"O\" : \"X\"}</b>の勝ちです！</h3>\n        </div>\n          <button onClick={() => onReset(null)} className=\"w3-button w3-block w3-orange\">リセット</button>\n      </div>\n    </div>\n  )\n}\n\nexport default WinnerModal","import React from 'react'\n\nfunction Stats({data}) {\n  return (\n    <div className=\"w3-card-0\">\n      {\n        data.length > 0 &&\n        <>\n          <header className=\"w3-container w3-light-grey\">\n            <h4>統計</h4>\n          </header>\n          <ul className=\"w3-ul \">\n            {\n              data.map((o, i) => \n              <li key={i}>#{i+1}. <b>{o? \"O\" : \"X\"}</b>の勝ちです</li>\n              )\n            }\n          </ul>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default Stats","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Board from './component/Board'\nimport Control, { OPTION } from './component/Control'\nimport { board, won } from './util'\nimport WinnerModal from './component/WinnerModal'\nimport Stats from './component/Stats'\n\nfunction App() {\n  const [option, setOption] = useState(OPTION)\n  const [current, setCurrent] = useState({\n    board: board(option.size),\n    turn: false,\n    criteria: option.criteria\n  })\n  const [history, setHistory] = useState([current])\n  const [winner, setWinner] = useState(null)\n  const [stats, setStats] = useState([])\n\n  useEffect(() => {\n    let newBoard = board(option.size), newCriteria = option.criteria\n    let newCurrent = {\n      board: newBoard,\n      turn: false,\n      criteria: newCriteria\n    }\n    setCurrent(newCurrent)\n    setHistory([newCurrent])\n    setWinner(null)\n  }, [option])\n\n  const handleReset = (newOption) => {\n    if (newOption!=null) setOption(newOption)\n    else setOption({...option})\n  }\n\n  const handleUndo = () => {\n    setCurrent(history.length > 1 ? history.pop() : current)\n    setHistory(history)\n    setWinner(null)\n  }\n\n  const handleBoardOnchange = (i, j) => {\n    const prev = JSON.parse(JSON.stringify(current))\n    if (current.board[i][j] != null)\n      return\n    current.board[i][j] = current.turn\n\n    if (won(current.board, current.criteria, [i,j])) {\n      setWinner(current.turn)\n      setStats([...stats, current.turn])\n    }\n\n    setCurrent({\n      board: current.board,\n      turn: !current.turn,\n      criteria: current.criteria\n    })\n    setHistory([...history, prev])\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"w3-row-padding w3-content\" style={{maxWidth: \"1024px\"}}>\n        <div className=\"w3-row-padding\">\n          <h2>五目並べ </h2>\n        </div>\n        <div className=\"w3-twothird\">\n          <Board\n            current={current}\n            onChange={handleBoardOnchange}\n            winner={winner}\n          />\n        </div>\n        <div className=\"w3-third\">\n          <Control\n            turn={current.turn}\n            onReset={handleReset}\n            onUndo={handleUndo}\n          />\n          <hr/>\n          <Stats\n            data={stats}\n          />\n        </div>\n      </div>\n      \n      <WinnerModal\n        onReset={handleReset}\n        winner={winner}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}